<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_test_collision_8cpp" kind="file" language="C++">
    <compoundname>TestCollision.cpp</compoundname>
    <includes refid="_alien_8hpp" local="yes">Alien.hpp</includes>
    <includes refid="_player_8hpp" local="yes">Player.hpp</includes>
    <includes local="no">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="2">
        <label>Alien.hpp</label>
        <link refid="_alien_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Player.hpp</label>
        <link refid="_player_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Projectile.hpp</label>
        <link refid="_projectile_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/TestCollision.cpp</label>
        <link refid="_test_collision_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>SFML/Audio.hpp</label>
      </node>
      <node id="3">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="8">
        <label>gtest/gtest.h</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_test_collision_8cpp_1a7eb750c42cc506b8e183bcb37843e34d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CollisionTest, AlienCollisionWithPlayer)</argsstring>
        <name>TEST</name>
        <param>
          <type>CollisionTest</type>
        </param>
        <param>
          <type>AlienCollisionWithPlayer</type>
        </param>
        <briefdescription>
<para>Test collision between an <ref refid="class_alien" kindref="compound">Alien</ref> and the <ref refid="class_player" kindref="compound">Player</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestCollision.cpp" line="8" column="1" bodyfile="tests/TestCollision.cpp" bodystart="8" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="_test_collision_8cpp_1a3b9bfeb0525670f252a4aa05f5428089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CollisionTest, AlienDamage)</argsstring>
        <name>TEST</name>
        <param>
          <type>CollisionTest</type>
        </param>
        <param>
          <type>AlienDamage</type>
        </param>
        <briefdescription>
<para>Test alien taking damage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestCollision.cpp" line="26" column="1" bodyfile="tests/TestCollision.cpp" bodystart="26" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_test_collision_8cpp_1ae467bdd55f7973959f177aab885e2a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CollisionTest, AlienDeath)</argsstring>
        <name>TEST</name>
        <param>
          <type>CollisionTest</type>
        </param>
        <param>
          <type>AlienDeath</type>
        </param>
        <briefdescription>
<para>Test alien dying after sufficient damage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestCollision.cpp" line="40" column="1" bodyfile="tests/TestCollision.cpp" bodystart="40" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_alien_8hpp" kindref="compound">Alien.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_player_8hpp" kindref="compound">Player.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="_test_collision_8cpp_1a7eb750c42cc506b8e183bcb37843e34d" refkind="member"><highlight class="normal"><ref refid="_test_collision_8cpp_1a7eb750c42cc506b8e183bcb37843e34d" kindref="member">TEST</ref>(CollisionTest,<sp/>AlienCollisionWithPlayer)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_player" kindref="compound">Player</ref><sp/>player;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>alien<sp/>at<sp/>the<sp/>player&apos;s<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alien" kindref="compound">Alien</ref><sp/>alien({player.<ref refid="class_player_1a23356f99a9de86d3d47eadb679b332dc" kindref="member">getPosition</ref>().x,<sp/>player.<ref refid="class_player_1a23356f99a9de86d3d47eadb679b332dc" kindref="member">getPosition</ref>().y},<sp/><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba9594eec95be70e7b1710f730fdda33d9" kindref="member">Alien::AlienType::Blue</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>collision<sp/>=<sp/>alien.<ref refid="class_alien_1a3e1202ecfff4f6a17ce54947539377dc" kindref="member">getBounds</ref>().intersects(player.<ref refid="class_player_1a93c9ef1c84a6aeffd225733536be2f53" kindref="member">getBounds</ref>());</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>collision<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(collision);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>alien<sp/>should<sp/>collide<sp/>with<sp/>the<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(alien.isDead(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>alien<sp/>should<sp/>not<sp/>be<sp/>dead<sp/>on<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="_test_collision_8cpp_1a3b9bfeb0525670f252a4aa05f5428089" refkind="member"><highlight class="normal"><ref refid="_test_collision_8cpp_1a7eb750c42cc506b8e183bcb37843e34d" kindref="member">TEST</ref>(CollisionTest,<sp/>AlienDamage)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>alien</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alien" kindref="compound">Alien</ref><sp/>alien({100.0f,<sp/>100.0f},<sp/><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44bad382816a3cbeed082c9e216e7392eed1" kindref="member">Alien::AlienType::Green</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>damage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>alien.<ref refid="class_alien_1aade4a5092a52bb1540e7e28455fd3da3" kindref="member">takeDamage</ref>(1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>health<sp/>is<sp/>reduced<sp/>and<sp/>alien<sp/>is<sp/>still<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(alien.isDead());<sp/></highlight><highlight class="comment">//<sp/>Alien<sp/>should<sp/>not<sp/>be<sp/>dead<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="_test_collision_8cpp_1ae467bdd55f7973959f177aab885e2a72" refkind="member"><highlight class="normal"><ref refid="_test_collision_8cpp_1a7eb750c42cc506b8e183bcb37843e34d" kindref="member">TEST</ref>(CollisionTest,<sp/>AlienDeath)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>alien</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alien" kindref="compound">Alien</ref><sp/>alien({100.0f,<sp/>100.0f},<sp/><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba51e6cd92b6c45f9affdc158ecca2b8b8" kindref="member">Alien::AlienType::Yellow</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>damage<sp/>that<sp/>kills<sp/>the<sp/>alien</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>alien.<ref refid="class_alien_1aade4a5092a52bb1540e7e28455fd3da3" kindref="member">takeDamage</ref>(1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>alien<sp/>is<sp/>dead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(alien.isDead());<sp/></highlight><highlight class="comment">//<sp/>Alien<sp/>should<sp/>be<sp/>dead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(alien.getType(),<sp/><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba51e6cd92b6c45f9affdc158ecca2b8b8" kindref="member">Alien::AlienType::Yellow</ref>);<sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>alien<sp/>type<sp/>remains<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/TestCollision.cpp"/>
  </compounddef>
</doxygen>
