<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_test_alien_8cpp" kind="file" language="C++">
    <compoundname>TestAlien.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="_alien_8hpp" local="yes">Alien.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>Alien.hpp</label>
        <link refid="_alien_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/TestAlien.cpp</label>
        <link refid="_test_alien_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_test_alien_8cpp_1a706caf66e1d66b8cfa947cc87349ea5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(AlienTest, Initialization)</argsstring>
        <name>TEST</name>
        <param>
          <type>AlienTest</type>
        </param>
        <param>
          <type>Initialization</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestAlien.cpp" line="4" column="1" bodyfile="tests/TestAlien.cpp" bodystart="4" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="_test_alien_8cpp_1a15979a25bd272f7c25d63f7c66c694fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(AlienTest, TakeDamage)</argsstring>
        <name>TEST</name>
        <param>
          <type>AlienTest</type>
        </param>
        <param>
          <type>TakeDamage</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestAlien.cpp" line="11" column="1" bodyfile="tests/TestAlien.cpp" bodystart="11" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="_test_alien_8cpp_1aa7bc51c618f697360ce7438cf675665b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(AlienTest, IsDead)</argsstring>
        <name>TEST</name>
        <param>
          <type>AlienTest</type>
        </param>
        <param>
          <type>IsDead</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestAlien.cpp" line="17" column="1" bodyfile="tests/TestAlien.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Alien.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">TEST(AlienTest,<sp/>Initialization)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alien" kindref="compound">Alien</ref><sp/>alien({100.0f,<sp/>50.0f},<sp/>5,<sp/><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba9594eec95be70e7b1710f730fdda33d9" kindref="member">Alien::AlienType::Blue</ref>);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(alien.getHealth(),<sp/>5);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(alien.getBounds().top,<sp/>50.0f);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(alien.getBounds().left,<sp/>100.0f);</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">TEST(AlienTest,<sp/>TakeDamage)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alien" kindref="compound">Alien</ref><sp/>alien({0.0f,<sp/>0.0f},<sp/>3,<sp/><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44bad382816a3cbeed082c9e216e7392eed1" kindref="member">Alien::AlienType::Green</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>alien.<ref refid="class_alien_1aade4a5092a52bb1540e7e28455fd3da3" kindref="member">takeDamage</ref>(1);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(alien.getHealth(),<sp/>2);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">TEST(AlienTest,<sp/>IsDead)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alien" kindref="compound">Alien</ref><sp/>alien({0.0f,<sp/>0.0f},<sp/>1,<sp/><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba51e6cd92b6c45f9affdc158ecca2b8b8" kindref="member">Alien::AlienType::Yellow</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>alien.<ref refid="class_alien_1aade4a5092a52bb1540e7e28455fd3da3" kindref="member">takeDamage</ref>(1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(alien.isDead());</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/TestAlien.cpp"/>
  </compounddef>
</doxygen>
