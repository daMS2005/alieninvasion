<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_player" kind="class" language="C++" prot="public">
    <compoundname>Player</compoundname>
    <includes refid="_player_8hpp" local="no">Player.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_player_1a19bc8731e5e84613a2ae7c4b5134dfab" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite Player::sprite</definition>
        <argsstring></argsstring>
        <name>sprite</name>
        <qualifiedname>Player::sprite</qualifiedname>
        <briefdescription>
<para>The sprite representing the player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="14" column="16" bodyfile="include/Player.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_player_1a9c6c14b89a6f99031a0d677828f1fa1a" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture Player::texture</definition>
        <argsstring></argsstring>
        <name>texture</name>
        <qualifiedname>Player::texture</qualifiedname>
        <briefdescription>
<para>The texture used for the player&apos;s sprite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="15" column="17" bodyfile="include/Player.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_player_1a770942101eff683b030edde9f730d537" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Player::speed</definition>
        <argsstring></argsstring>
        <name>speed</name>
        <qualifiedname>Player::speed</qualifiedname>
        <briefdescription>
<para>The movement speed of the player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="16" column="11" bodyfile="include/Player.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_player_1aba64aa705a1be12b6b96256e3f89bdff" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_projectile" kindref="compound">Projectile</ref> &gt;</type>
        <definition>std::vector&lt;Projectile&gt; Player::projectiles</definition>
        <argsstring></argsstring>
        <name>projectiles</name>
        <qualifiedname>Player::projectiles</qualifiedname>
        <briefdescription>
<para>Active projectiles fired by the player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="17" column="17" bodyfile="include/Player.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_player_1a88b0d81b6e2165fe812512eae6ac8e22" prot="private" static="no" mutable="no">
        <type>sf::Clock</type>
        <definition>sf::Clock Player::shootClock</definition>
        <argsstring></argsstring>
        <name>shootClock</name>
        <qualifiedname>Player::shootClock</qualifiedname>
        <briefdescription>
<para>Timer to enforce shooting cooldown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="18" column="15" bodyfile="include/Player.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_player_1a6b76a680424ef79e29be0bd13e19e145" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Player::shootCooldown</definition>
        <argsstring></argsstring>
        <name>shootCooldown</name>
        <qualifiedname>Player::shootCooldown</qualifiedname>
        <briefdescription>
<para>Minimum time (in seconds) between shots. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="19" column="11" bodyfile="include/Player.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_player_1aad33b52bfe73c4c978a3135172f286a0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Player::health</definition>
        <argsstring></argsstring>
        <name>health</name>
        <qualifiedname>Player::health</qualifiedname>
        <briefdescription>
<para>The player&apos;s health points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="20" column="9" bodyfile="include/Player.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_player_1a37cab32e0f665e31919196c05f8b68cd" prot="private" static="no" mutable="no">
        <type>sf::RectangleShape</type>
        <definition>sf::RectangleShape Player::healthBarBackground</definition>
        <argsstring></argsstring>
        <name>healthBarBackground</name>
        <qualifiedname>Player::healthBarBackground</qualifiedname>
        <briefdescription>
<para>Background for the player&apos;s health bar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="21" column="24" bodyfile="include/Player.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_player_1a8434a534b36c0e2c5ae370316bb38f80" prot="private" static="no" mutable="no">
        <type>sf::RectangleShape</type>
        <definition>sf::RectangleShape Player::healthBarForeground</definition>
        <argsstring></argsstring>
        <name>healthBarForeground</name>
        <qualifiedname>Player::healthBarForeground</qualifiedname>
        <briefdescription>
<para>Foreground for the player&apos;s health bar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="22" column="24" bodyfile="include/Player.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_player_1affe0cc3cb714f6deb4e62f0c0d3f1fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Player::Player</definition>
        <argsstring>()</argsstring>
        <name>Player</name>
        <qualifiedname>Player::Player</qualifiedname>
        <briefdescription>
<para>Constructs a <ref refid="class_player" kindref="compound">Player</ref> object and initializes its properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="26" column="5" bodyfile="src/Player.cpp" bodystart="4" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1a22c77aea817fb52c33280b2792992123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::handleInput</definition>
        <argsstring>(float deltaTime)</argsstring>
        <name>handleInput</name>
        <qualifiedname>Player::handleInput</qualifiedname>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
<para>Handles player input and updates position based on input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The elapsed time since the last frame. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="30" column="10" bodyfile="src/Player.cpp" bodystart="26" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1a82c3476f3e65a4e2ac6bcd040771bdd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>Player::update</qualifiedname>
        <briefdescription>
<para>Updates the player&apos;s state, such as animations or cooldowns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="33" column="10" bodyfile="src/Player.cpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1aa0ca8feab9679e9e29e61501e5db8451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::updateProjectiles</definition>
        <argsstring>(float deltaTime)</argsstring>
        <name>updateProjectiles</name>
        <qualifiedname>Player::updateProjectiles</qualifiedname>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
<para>Updates the active projectiles fired by the player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The elapsed time since the last frame. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="37" column="10" bodyfile="src/Player.cpp" bodystart="62" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1a53938857e80374e79726309e78d1c15c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::render</definition>
        <argsstring>(sf::RenderWindow &amp;window)</argsstring>
        <name>render</name>
        <qualifiedname>Player::render</qualifiedname>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Renders the player sprite to the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The SFML window where the player will be drawn. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="41" column="10" bodyfile="src/Player.cpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1aee602f1426fb5cea15ba9823f5e198b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::renderProjectiles</definition>
        <argsstring>(sf::RenderWindow &amp;window)</argsstring>
        <name>renderProjectiles</name>
        <qualifiedname>Player::renderProjectiles</qualifiedname>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Renders all active projectiles to the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The SFML window where the projectiles will be drawn. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="45" column="10" bodyfile="src/Player.cpp" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1a6e448bb32639412c88101b64f41b50e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::renderHealthBar</definition>
        <argsstring>(sf::RenderWindow &amp;window)</argsstring>
        <name>renderHealthBar</name>
        <qualifiedname>Player::renderHealthBar</qualifiedname>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Renders the player&apos;s health bar to the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The SFML window where the health bar will be drawn. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="49" column="10" bodyfile="src/Player.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1a4cdc67fd9ca2de09af89d9ae19efe5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::shoot</definition>
        <argsstring>()</argsstring>
        <name>shoot</name>
        <qualifiedname>Player::shoot</qualifiedname>
        <briefdescription>
<para>Fires a projectile if the cooldown allows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="52" column="10" bodyfile="src/Player.cpp" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1af97f9b32912f28fdcdad1785d515cd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::takeDamage</definition>
        <argsstring>(int damage)</argsstring>
        <name>takeDamage</name>
        <qualifiedname>Player::takeDamage</qualifiedname>
        <param>
          <type>int</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
<para>Reduces the player&apos;s health by a specified amount. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>damage</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of damage to apply to the player. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="56" column="10" bodyfile="src/Player.cpp" bodystart="47" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1a4f679a9d2fa60e76fe00d615dfe4d584" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Player::getPosition</definition>
        <argsstring>() const</argsstring>
        <name>getPosition</name>
        <qualifiedname>Player::getPosition</qualifiedname>
        <briefdescription>
<para>Gets the player&apos;s current position. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A 2D vector representing the player&apos;s position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="60" column="18" bodyfile="src/Player.cpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1aec00a96a409d68ac0f88007f93f42329" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>sf::FloatRect</type>
        <definition>sf::FloatRect Player::getBounds</definition>
        <argsstring>() const</argsstring>
        <name>getBounds</name>
        <qualifiedname>Player::getBounds</qualifiedname>
        <briefdescription>
<para>Gets the bounding box of the player&apos;s sprite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A FloatRect representing the player&apos;s bounding box. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="64" column="19" bodyfile="src/Player.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1aa21595133cab1bfdf3c92ec55453fda1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_projectile" kindref="compound">Projectile</ref> &gt; &amp;</type>
        <definition>std::vector&lt; Projectile &gt; &amp; Player::getProjectiles</definition>
        <argsstring>()</argsstring>
        <name>getProjectiles</name>
        <qualifiedname>Player::getProjectiles</qualifiedname>
        <briefdescription>
<para>Gets a reference to the player&apos;s active projectiles. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector containing the active projectiles. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="68" column="17" bodyfile="src/Player.cpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1a9ce7657823f99abdfcf8e0d752465800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Player::removeProjectile</definition>
        <argsstring>(size_t index)</argsstring>
        <name>removeProjectile</name>
        <qualifiedname>Player::removeProjectile</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes a projectile from the player&apos;s projectile list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the projectile to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="72" column="10" bodyfile="src/Player.cpp" bodystart="99" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_player_1abcb15d249bed9a4ab0ab86b52b0d747a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Player::getHealth</definition>
        <argsstring>()</argsstring>
        <name>getHealth</name>
        <qualifiedname>Player::getHealth</qualifiedname>
        <briefdescription>
<para>Gets the player&apos;s current health. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The player&apos;s health as an integer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Player.hpp" line="76" column="9" bodyfile="src/Player.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents the player character in the game. </para>
    </briefdescription>
    <detaileddescription>
<para>This class handles the player&apos;s movement, shooting, health, and rendering. </para>
    </detaileddescription>
    <location file="include/Player.hpp" line="12" column="1" bodyfile="include/Player.hpp" bodystart="12" bodyend="77"/>
    <listofallmembers>
      <member refid="class_player_1aec00a96a409d68ac0f88007f93f42329" prot="public" virt="non-virtual"><scope>Player</scope><name>getBounds</name></member>
      <member refid="class_player_1abcb15d249bed9a4ab0ab86b52b0d747a" prot="public" virt="non-virtual"><scope>Player</scope><name>getHealth</name></member>
      <member refid="class_player_1a4f679a9d2fa60e76fe00d615dfe4d584" prot="public" virt="non-virtual"><scope>Player</scope><name>getPosition</name></member>
      <member refid="class_player_1aa21595133cab1bfdf3c92ec55453fda1" prot="public" virt="non-virtual"><scope>Player</scope><name>getProjectiles</name></member>
      <member refid="class_player_1a22c77aea817fb52c33280b2792992123" prot="public" virt="non-virtual"><scope>Player</scope><name>handleInput</name></member>
      <member refid="class_player_1aad33b52bfe73c4c978a3135172f286a0" prot="private" virt="non-virtual"><scope>Player</scope><name>health</name></member>
      <member refid="class_player_1a37cab32e0f665e31919196c05f8b68cd" prot="private" virt="non-virtual"><scope>Player</scope><name>healthBarBackground</name></member>
      <member refid="class_player_1a8434a534b36c0e2c5ae370316bb38f80" prot="private" virt="non-virtual"><scope>Player</scope><name>healthBarForeground</name></member>
      <member refid="class_player_1affe0cc3cb714f6deb4e62f0c0d3f1fd8" prot="public" virt="non-virtual"><scope>Player</scope><name>Player</name></member>
      <member refid="class_player_1aba64aa705a1be12b6b96256e3f89bdff" prot="private" virt="non-virtual"><scope>Player</scope><name>projectiles</name></member>
      <member refid="class_player_1a9ce7657823f99abdfcf8e0d752465800" prot="public" virt="non-virtual"><scope>Player</scope><name>removeProjectile</name></member>
      <member refid="class_player_1a53938857e80374e79726309e78d1c15c" prot="public" virt="non-virtual"><scope>Player</scope><name>render</name></member>
      <member refid="class_player_1a6e448bb32639412c88101b64f41b50e6" prot="public" virt="non-virtual"><scope>Player</scope><name>renderHealthBar</name></member>
      <member refid="class_player_1aee602f1426fb5cea15ba9823f5e198b6" prot="public" virt="non-virtual"><scope>Player</scope><name>renderProjectiles</name></member>
      <member refid="class_player_1a4cdc67fd9ca2de09af89d9ae19efe5f8" prot="public" virt="non-virtual"><scope>Player</scope><name>shoot</name></member>
      <member refid="class_player_1a88b0d81b6e2165fe812512eae6ac8e22" prot="private" virt="non-virtual"><scope>Player</scope><name>shootClock</name></member>
      <member refid="class_player_1a6b76a680424ef79e29be0bd13e19e145" prot="private" virt="non-virtual"><scope>Player</scope><name>shootCooldown</name></member>
      <member refid="class_player_1a770942101eff683b030edde9f730d537" prot="private" virt="non-virtual"><scope>Player</scope><name>speed</name></member>
      <member refid="class_player_1a19bc8731e5e84613a2ae7c4b5134dfab" prot="private" virt="non-virtual"><scope>Player</scope><name>sprite</name></member>
      <member refid="class_player_1af97f9b32912f28fdcdad1785d515cd2d" prot="public" virt="non-virtual"><scope>Player</scope><name>takeDamage</name></member>
      <member refid="class_player_1a9c6c14b89a6f99031a0d677828f1fa1a" prot="private" virt="non-virtual"><scope>Player</scope><name>texture</name></member>
      <member refid="class_player_1a82c3476f3e65a4e2ac6bcd040771bdd4" prot="public" virt="non-virtual"><scope>Player</scope><name>update</name></member>
      <member refid="class_player_1aa0ca8feab9679e9e29e61501e5db8451" prot="public" virt="non-virtual"><scope>Player</scope><name>updateProjectiles</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
