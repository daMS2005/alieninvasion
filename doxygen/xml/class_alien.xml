<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_alien" kind="class" language="C++" prot="public">
    <compoundname>Alien</compoundname>
    <includes refid="_alien_8hpp" local="no">Alien.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44b" prot="public" static="no" strong="yes">
        <type></type>
        <name>AlienType</name>
        <qualifiedname>Alien::AlienType</qualifiedname>
        <enumvalue id="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba9594eec95be70e7b1710f730fdda33d9" prot="public">
          <name>Blue</name>
          <briefdescription>
<para>Represents a blue alien. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44bad382816a3cbeed082c9e216e7392eed1" prot="public">
          <name>Green</name>
          <briefdescription>
<para>Represents a green alien. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba51e6cd92b6c45f9affdc158ecca2b8b8" prot="public">
          <name>Yellow</name>
          <briefdescription>
<para>Represents a yellow alien. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerates the types of aliens. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="15" column="5" bodyfile="include/Alien.hpp" bodystart="15" bodyend="19"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_alien_1abd25ea5c1767209f7e515fb6fb1ac70d" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite Alien::sprite</definition>
        <argsstring></argsstring>
        <name>sprite</name>
        <qualifiedname>Alien::sprite</qualifiedname>
        <briefdescription>
<para>The sprite representing the alien. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="22" column="16" bodyfile="include/Alien.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alien_1a52facb5809f9d42085e5ae16efd5dcc8" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture Alien::texture0</definition>
        <argsstring></argsstring>
        <name>texture0</name>
        <qualifiedname>Alien::texture0</qualifiedname>
        <briefdescription>
<para>Texture for animation frame 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="23" column="17" bodyfile="include/Alien.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alien_1a428f49083be0998c5f68469d03d52a41" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture Alien::texture1</definition>
        <argsstring></argsstring>
        <name>texture1</name>
        <qualifiedname>Alien::texture1</qualifiedname>
        <briefdescription>
<para>Texture for animation frame 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="24" column="17" bodyfile="include/Alien.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alien_1a38c0995a1312962ccefc2340698ca8b5" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Alien::speed</definition>
        <argsstring></argsstring>
        <name>speed</name>
        <qualifiedname>Alien::speed</qualifiedname>
        <briefdescription>
<para>Speed of the alien&apos;s movement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="25" column="11" bodyfile="include/Alien.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alien_1a6b50f4ea2b4c6c40b3bee4cffa17e89a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Alien::health</definition>
        <argsstring></argsstring>
        <name>health</name>
        <qualifiedname>Alien::health</qualifiedname>
        <briefdescription>
<para>The alien&apos;s health points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="26" column="9" bodyfile="include/Alien.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alien_1a8c9c996c70b2f3e505a7e6a5de6a117c" prot="private" static="no" mutable="no">
        <type>sf::Clock</type>
        <definition>sf::Clock Alien::animationClock</definition>
        <argsstring></argsstring>
        <name>animationClock</name>
        <qualifiedname>Alien::animationClock</qualifiedname>
        <briefdescription>
<para>Timer for handling sprite animation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="27" column="15" bodyfile="include/Alien.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alien_1a9634967aa9bdc801238c70b400825522" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alien::useTexture0</definition>
        <argsstring></argsstring>
        <name>useTexture0</name>
        <qualifiedname>Alien::useTexture0</qualifiedname>
        <briefdescription>
<para>Toggle between textures for animation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="28" column="10" bodyfile="include/Alien.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alien_1aa353a56ae04c07f11506bfa88d51d531" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alien::isMoving</definition>
        <argsstring></argsstring>
        <name>isMoving</name>
        <qualifiedname>Alien::isMoving</qualifiedname>
        <briefdescription>
<para>Whether the alien is currently moving. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="29" column="10" bodyfile="include/Alien.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alien_1afb9106e67af24ba8123551bbf7b2a43c" prot="private" static="no" mutable="no">
        <type><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44b" kindref="member">AlienType</ref></type>
        <definition>AlienType Alien::alienType</definition>
        <argsstring></argsstring>
        <name>alienType</name>
        <qualifiedname>Alien::alienType</qualifiedname>
        <briefdescription>
<para>The type of the alien (affects appearance and behavior). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="30" column="15" bodyfile="include/Alien.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alien_1adb73372fd4a10b742fab3df457bdc0da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Alien::getHealth</definition>
        <argsstring>() const</argsstring>
        <name>getHealth</name>
        <qualifiedname>Alien::getHealth</qualifiedname>
        <briefdescription>
<para>Gets the current health of the alien. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The alien&apos;s current health as an integer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="35" column="9" bodyfile="src/Alien.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_alien_1a8d4d1188bc4cec81a36630588f77f65d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Alien::Alien</definition>
        <argsstring>(const sf::Vector2f &amp;position, int initialHealth=3, AlienType type=AlienType::Blue)</argsstring>
        <name>Alien</name>
        <qualifiedname>Alien::Alien</qualifiedname>
        <param>
          <type>const sf::Vector2f &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initialHealth</declname>
          <defval>3</defval>
        </param>
        <param>
          <type><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44b" kindref="member">AlienType</ref></type>
          <declname>type</declname>
          <defval><ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba9594eec95be70e7b1710f730fdda33d9" kindref="member">AlienType::Blue</ref></defval>
        </param>
        <briefdescription>
<para>Constructs an <ref refid="class_alien" kindref="compound">Alien</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial position of the alien. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialHealth</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting health of the alien (default is 3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of alien (default is <ref refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44ba9594eec95be70e7b1710f730fdda33d9" kindref="member">AlienType::Blue</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="41" column="5" bodyfile="src/Alien.cpp" bodystart="4" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_alien_1a1cc622b85a2286d7ad2d908f42a3ac93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alien::update</definition>
        <argsstring>(float deltaTime, int scoreThreshold, int currentScore)</argsstring>
        <name>update</name>
        <qualifiedname>Alien::update</qualifiedname>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scoreThreshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentScore</declname>
        </param>
        <briefdescription>
<para>Updates the alien&apos;s state, including position and animation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The elapsed time since the last update. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scoreThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>A score threshold that may affect alien behavior. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentScore</parametername>
</parameternamelist>
<parameterdescription>
<para>The player&apos;s current score, used to adjust behavior. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="47" column="10" bodyfile="src/Alien.cpp" bodystart="38" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_alien_1aaa7613bc0d257f498e876521a327e25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alien::render</definition>
        <argsstring>(sf::RenderWindow &amp;window)</argsstring>
        <name>render</name>
        <qualifiedname>Alien::render</qualifiedname>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Renders the alien to the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The SFML window where the alien will be drawn. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="51" column="10" bodyfile="src/Alien.cpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_alien_1a3e1202ecfff4f6a17ce54947539377dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>sf::FloatRect</type>
        <definition>sf::FloatRect Alien::getBounds</definition>
        <argsstring>() const</argsstring>
        <name>getBounds</name>
        <qualifiedname>Alien::getBounds</qualifiedname>
        <briefdescription>
<para>Gets the bounding box of the alien&apos;s sprite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A FloatRect representing the alien&apos;s bounding box. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="55" column="19" bodyfile="src/Alien.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_alien_1ab51931eaa1313529b2950977dfe2b100" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alien::isOffScreen</definition>
        <argsstring>() const</argsstring>
        <name>isOffScreen</name>
        <qualifiedname>Alien::isOffScreen</qualifiedname>
        <briefdescription>
<para>Checks if the alien has moved off the screen. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the alien is off-screen, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="59" column="10" bodyfile="src/Alien.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_alien_1ad7253f1aded3432ddd6d7d1c20b6441b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alien::startMoving</definition>
        <argsstring>()</argsstring>
        <name>startMoving</name>
        <qualifiedname>Alien::startMoving</qualifiedname>
        <briefdescription>
<para>Starts the alien&apos;s movement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="62" column="10" bodyfile="src/Alien.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_alien_1aade4a5092a52bb1540e7e28455fd3da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alien::takeDamage</definition>
        <argsstring>(int damage)</argsstring>
        <name>takeDamage</name>
        <qualifiedname>Alien::takeDamage</qualifiedname>
        <param>
          <type>int</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
<para>Reduces the alien&apos;s health by a specified amount of damage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>damage</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of damage to apply to the alien. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="66" column="10" bodyfile="src/Alien.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_alien_1a9f42e58e71748b4c14daece420b347e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alien::isDead</definition>
        <argsstring>() const</argsstring>
        <name>isDead</name>
        <qualifiedname>Alien::isDead</qualifiedname>
        <briefdescription>
<para>Checks if the alien is dead (health &lt;= 0). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the alien is dead, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Alien.hpp" line="70" column="10" bodyfile="src/Alien.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents an alien in the game. </para>
    </briefdescription>
    <detaileddescription>
<para>This class handles the properties and behaviors of aliens, including movement, health, rendering, and interaction with other game entities. </para>
    </detaileddescription>
    <location file="include/Alien.hpp" line="11" column="1" bodyfile="include/Alien.hpp" bodystart="11" bodyend="71"/>
    <listofallmembers>
      <member refid="class_alien_1a8d4d1188bc4cec81a36630588f77f65d" prot="public" virt="non-virtual"><scope>Alien</scope><name>Alien</name></member>
      <member refid="class_alien_1af8a9d0e36fb97cba5c6412e55ba3d44b" prot="public" virt="non-virtual"><scope>Alien</scope><name>AlienType</name></member>
      <member refid="class_alien_1afb9106e67af24ba8123551bbf7b2a43c" prot="private" virt="non-virtual"><scope>Alien</scope><name>alienType</name></member>
      <member refid="class_alien_1a8c9c996c70b2f3e505a7e6a5de6a117c" prot="private" virt="non-virtual"><scope>Alien</scope><name>animationClock</name></member>
      <member refid="class_alien_1a3e1202ecfff4f6a17ce54947539377dc" prot="public" virt="non-virtual"><scope>Alien</scope><name>getBounds</name></member>
      <member refid="class_alien_1adb73372fd4a10b742fab3df457bdc0da" prot="public" virt="non-virtual"><scope>Alien</scope><name>getHealth</name></member>
      <member refid="class_alien_1a6b50f4ea2b4c6c40b3bee4cffa17e89a" prot="private" virt="non-virtual"><scope>Alien</scope><name>health</name></member>
      <member refid="class_alien_1a9f42e58e71748b4c14daece420b347e3" prot="public" virt="non-virtual"><scope>Alien</scope><name>isDead</name></member>
      <member refid="class_alien_1aa353a56ae04c07f11506bfa88d51d531" prot="private" virt="non-virtual"><scope>Alien</scope><name>isMoving</name></member>
      <member refid="class_alien_1ab51931eaa1313529b2950977dfe2b100" prot="public" virt="non-virtual"><scope>Alien</scope><name>isOffScreen</name></member>
      <member refid="class_alien_1aaa7613bc0d257f498e876521a327e25b" prot="public" virt="non-virtual"><scope>Alien</scope><name>render</name></member>
      <member refid="class_alien_1a38c0995a1312962ccefc2340698ca8b5" prot="private" virt="non-virtual"><scope>Alien</scope><name>speed</name></member>
      <member refid="class_alien_1abd25ea5c1767209f7e515fb6fb1ac70d" prot="private" virt="non-virtual"><scope>Alien</scope><name>sprite</name></member>
      <member refid="class_alien_1ad7253f1aded3432ddd6d7d1c20b6441b" prot="public" virt="non-virtual"><scope>Alien</scope><name>startMoving</name></member>
      <member refid="class_alien_1aade4a5092a52bb1540e7e28455fd3da3" prot="public" virt="non-virtual"><scope>Alien</scope><name>takeDamage</name></member>
      <member refid="class_alien_1a52facb5809f9d42085e5ae16efd5dcc8" prot="private" virt="non-virtual"><scope>Alien</scope><name>texture0</name></member>
      <member refid="class_alien_1a428f49083be0998c5f68469d03d52a41" prot="private" virt="non-virtual"><scope>Alien</scope><name>texture1</name></member>
      <member refid="class_alien_1a1cc622b85a2286d7ad2d908f42a3ac93" prot="public" virt="non-virtual"><scope>Alien</scope><name>update</name></member>
      <member refid="class_alien_1a9634967aa9bdc801238c70b400825522" prot="private" virt="non-virtual"><scope>Alien</scope><name>useTexture0</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
